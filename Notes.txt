1) GROUP BY
Even if we group datas by the column which has all distinct vales thus all groups will
have only 1 of corresponding values of any other columns, it's still will give error 
if we try to add these columns to SELECT claus because SQL thiks multipe different
possible values of these columns can present in one group so it can't decide which vale
should be choosen to show on query result.

2) If we try to GROUP datas BY 2 or more different Columns it will group them by the combination
of these columns where all possible combination are distinct. Same applies to SELECT DISTINCT.

3) While U can cast 10 character text to 5 char it will return 1st 5 char of 10 without error, 
but if U try to cast integer with more digit than casted char count it will give an error

4) AND, OR operators has predecency order while both of them applied in query, AND operator
which has higer predecence considered 1st then OR operator. If we want OR to execude 1st
then we have to use parantheses

5) TOP ifadesi bir sorguda en son çalişan kisimdir. Yani öncelikle sorgumuz çaliştirilir ve oluşacak olan sonuç kümesinin (result set) ilk 5 kaydi alinir.

6) SELECT FirstName FROM Employees  WHERE FirstName LIKE '[^M]%'
The LIKE operator is used for pattern matching in SQL. In this case, the pattern is [^M]%. Let's break down the pattern:

	-	[ and ] denote a character range.
	-	^ inside the character range specifies negation.
	-	M is the character to be excluded.
	-	% is a wildcard that matches any sequence of characters.
Therefore, the pattern [^MZ]% matches any string where the first character is not "M" or "Z" followed by any number of characters.(note: negation ^ negate all chars inside range, eg [^A-K])

7) SELECT ASCII ('A') AS [ASCII Kodu]
   SELECT CHAR(65) AS [Karakter]
these 2 functions convert char to ASCII number and vice versa

8) SELECT [VALUE], value, VALUE AS ResultSonucu FROM STRING_SPLIT('ali.vuranok@code.edu.az','.')
Some funvtions in SQL return TABLE data types which has column name 'VALUE' which
can be used to query datas in it.

9) WHILE LOOP
DECLARE @i INT = 65;
WHILE @i <= 90
	BEGIN
		PRINT char(@i);
		SET @i = @i + 1;
	END;

10) Column aliases can not be used in WHERE, HAVING clauses but they can be used in
ORDER BY clause

11) SubQueries are One row(one column), Multiple row and Correlated subqueries.

A subquery is correlated when the value that it produces depends on a value produced by the outer SELECT statement that contains it. 
Corelated SubQueries and their outer queries can use each others aliases and columns. 
Any other kind of subquery is considered uncorrelated. Only uncorrelated subqueries are valid in the FROM clause of the SELECT statement.

The database server supports subqueries in the following contexts:
A SELECT statement nested in the Projection clause of another SELECT statement
a SELECT statement nested in the WHERE clause of another SELECT statement
a SELECT statement nested in the FROM clause of another SELECT statement.
You can also specify a subquery in various clauses of the INSERT, DELETE, MERGE, or UPDATE statements

The important feature of a correlated subquery is that, because it depends on a value from the outer SELECT, 
it must be executed repeatedly, once for every value that the outer SELECT produces. An uncorrelated subquery is executed only once.

             -----SITUATIONS WITH SUBQUERIES AFTER SELECT STATEMNT------
1-SUBQUERY RETURNS ONE CELL
2-SUBQUERY RETURNS TABLE BUT IT'S CORRELATED
    1st situation is like putting any scalar value in column name
    2nd situation where subquery returns multiple rows and even columns, this 
situation has 2 possible scenario first the subquery returns those datas arbitrary aka it's 
uncorrelated, this will give error because it's impossible sql to know which values where to put.
    The second scenario is where subquery returns datas based on joining outer query
table and subquery table using any 2 of their connecting FK->PK columns aka it's correlated.

!!!-NOTE-!!!: When using correlated subqueries in SELECT statement be sure outer query tabel relates
to subquery table by Many-to-One relation not othervise or possibly subquery will retuen
multiple data for one outer query result(single data) and db will give an error!

1ST SITUATION:
	
	SELECT FirstName, (SELECT MAX(EmployeeID) FROM Employees ) as 'Max', 'Arbitrary' as Ar
	FROM Employees

OUTPUT:
Firstname| Max |    Ar
Nancy	   11	 Arbitrary
Andrew	   11	 Arbitrary
Janet	   11	 Arbitrary
Margaret   11	 Arbitrary
Steven	   11	 Arbitrary
Michael	   11	 Arbitrary
Robert	   11	 Arbitrary
Laura	   11	 Arbitrary
Anne	   11	 Arbitrary
Andrew	   11	 Arbitrary
Andrew	   11	 Arbitrary


2ND SITUATION:

	SELECT ShipVia, (SELECT CompanyName 
				FROM Shippers S 
				WHERE O.ShipVia = S.ShipperID) AS CompanyName
	FROM Orders O
	GROUP BY O.ShipVia

OUTPUT:
ShipVia |   CompanyName    
   1	  Speedy Express
   2	  United Package
   3	  Federal Shipping


And if we use GROUP BY we don't have to include CompanyName subquery column inside grouping, where normally columns that listed with select must be
included in GROUP BY clause or it will give error. And thats because since outer query contains columns from many_table and subqery is containing
datas from one_table, then for a data row from outer table, it's impossible that would be more than one related data existed in subquery table.

REFERENCE: https://www.ibm.com/docs/en/informix-servers/14.10?topic=documentation-sql-programming